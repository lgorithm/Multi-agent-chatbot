name: Build and Deploy to GKE

on:
  push:
    branches:
      - develop

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-agent-chatbot  # Add your cluster name here.
  GKE_ZONE: us-central1  # Add your cluster zone here.
  DEPLOYMENT_NAME: agent-deploy # Add your deployment name here.
  IMAGE: agent # Image Name

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Debugging step: Print environment variables
    - name: Print environment variables
      run: |-
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"
        echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}"
        echo "LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}"
        echo "LANGCHAIN_PROJECT=${{ secrets.LANGCHAIN_PROJECT }}"
        echo "LANGCHAIN_TRACING_V2=${{ secrets.LANGCHAIN_TRACING_V2 }}"

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        kubectl create secret generic openai-secret --from-literal=OPENAI_KEY=${{secrets.OPENAI_API_KEY}} || true
        kubectl create secret generic tavily-secret --from-literal=TAVILY_KEY=${{secrets.TAVILY_API_KEY}} || true
        kubectl create secret generic langchain-secret --from-literal=LANGCHAIN_KEY=${{secrets.LANGCHAIN_API_KEY}} || true
        kubectl create secret generic langchain-project --from-literal=PROJECT_NAME=${{secrets.LANGCHAIN_PROJECT}} || true
        kubectl create secret generic langchain-tracing-v2 --from-literal=TRACING=${{secrets.LANGCHAIN_TRACING_V2}} || true


    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

